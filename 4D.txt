#include <bits/stdc++.h>
 
using namespace std;
int path[50001],w[500001],h[500001],dp[500001];
 int n ;
 int solve(int i = 0 ){
 if (dp[i]!=-1)return dp[i];
 dp[i]=0;
 for (int j = 1 ;j<= n;j++){
    if(w[i] < w[j] && h[i] <h[j] && solve(j)+ 1 > dp[i]){
        dp[i] = solve(j)+1;
        path[i]=j;
    }
 }
 return dp[i];
 }
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    memset(path,-1,sizeof path);
    memset(dp,-1,sizeof dp);
 
    cin >> n>> w[0] >> h[0] ;
    for (int i = 1 ; i <= n ;i++)
    cin >> w[i]>> h[i];
    cout << solve()<<endl;
    int i = 0 ;
   while ((~path[i]))
    cout << path[i] << " ",i=path[i];
 
 
}
 